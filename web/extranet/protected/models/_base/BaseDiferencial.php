<?php

/**
 * This is the model base class for the table "diferencial".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Diferencial".
 *
 * Columns in table "diferencial" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $iddiferencial
 * @property string $titulo
 * @property string $texto
 * @property string $icone
 * @property string $ativo
 *
 */
abstract class BaseDiferencial extends GxActiveRecord {
	
    
        
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'diferencial';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Diferenciais', $n);
	}

	public static function representingColumn() {
		return array('titulo');
	}

	public function rules() {
		return array(
			array('titulo', 'length', 'max'=>100),
			array('icone', 'length', 'max'=>140),
			array('ativo', 'length', 'max'=>1),
			array('texto', 'safe'),
			array('titulo, texto, icone, ativo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('iddiferencial, titulo, texto, icone, ativo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'iddiferencial' => Yii::t('app', 'Iddiferencial'),
			'titulo' => Yii::t('app', 'Título'),
			'texto' => Yii::t('app', 'Texto'),
			'icone' => Yii::t('app', 'Ícone'),
			'ativo' => Yii::t('app', 'Ativo'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('iddiferencial', $this->iddiferencial);
		$criteria->compare('titulo', $this->titulo, true);
		$criteria->compare('texto', $this->texto, true);
		$criteria->compare('icone', $this->icone, true);
		$criteria->compare('ativo', $this->ativo, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}